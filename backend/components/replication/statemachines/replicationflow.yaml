QueryLanguage: JSONata
StartAt: SetVariables
States:
  SetVariables:
    Type: Pass
    Assign:
      flowId: >-
        {% $states.input.flow.id %}
      timerange: >-
        {% $boolean($states.input.timerange) ? $states.input.timerange: $states.input.flow.timerange %}
      flow: >-
        {% $states.input.flow %}
    Next: CheckFlow
  CheckFlow:
    Type: Task
    Resource: arn:aws:states:::http:invoke
    Arguments:
      Method: GET
      InvocationConfig:
        ConnectionArn: ${ConnectionArn}
      ApiEndpoint: >-
        {% '${TamsEndpoint}/flows/' & $flowId %}
    Retry:
      - ErrorEquals:
          - Events.ConnectionResource.InvalidConnectionState
          - Events.ConnectionResource.AuthInProgress
          - Events.ConnectionResource.ConcurrentModification
        IntervalSeconds: 1
        BackoffRate: 2
        MaxAttempts: 3
    Catch:
      - ErrorEquals:
          - States.Http.StatusCode.404
        Next: CreateFlow
    Output:
      timerange: >-
        {% $timerange %}
    End: True
  CreateFlow:
    Type: Task
    Resource: arn:aws:states:::http:invoke
    Arguments:
      InvocationConfig:
        ConnectionArn: ${ConnectionArn}
      ApiEndpoint: >-
        {% '${TamsEndpoint}/flows/' & $flowId %}
      Method: PUT
      RequestBody: >-
        {% $flow %}
    Retry:
      - ErrorEquals:
          - Events.ConnectionResource.InvalidConnectionState
          - Events.ConnectionResource.AuthInProgress
          - Events.ConnectionResource.ConcurrentModification
        IntervalSeconds: 1
        BackoffRate: 2
        MaxAttempts: 3
    Output:
      timerange: >-
        {% $timerange %}
    End: True
