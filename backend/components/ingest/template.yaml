AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  UserPoolId:
    Type: String

  ApiEndpoint:
    Type: String

  UserPoolClientId:
    Type: String

  TokenUrl:
    Type: String

  AuthRoleName:
    Type: String

  OpenIdAuthLayerArn:
    Type: String

Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Tracing: Active
    Timeout: 30
    MemorySize: 128
    Handler: app.lambda_handler
    Runtime: python3.13
    Architectures:
      - arm64

Resources:
  AuthRolePolicyIngest:
    Type: AWS::IAM::RolePolicy
    Properties:
      RoleName: !Ref AuthRoleName
      PolicyName: Ingest
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameters
            Resource: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*

  MediaInfoLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
      BuildArchitecture: arm64
    Properties:
      RetentionPolicy: Delete
      ContentUri: layers/mediainfo
      CompatibleRuntimes:
        - python3.13
      CompatibleArchitectures:
        - arm64

  S3IngestionFunction:

    # checkov:skip=CKV_AWS_115
    # checkov:skip=CKV_AWS_116
    # checkov:skip=CKV_AWS_117
    # checkov:skip=CKV_AWS_173
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: VPC not required
          - id: W92
            reason: ReservedConcurrentExecutions not required
    Properties:
      CodeUri: functions/s3-ingestion
      Layers:
        - !Ref OpenIdAuthLayerArn
      Environment:
        Variables:
          TAMS_ENDPOINT: !Ref ApiEndpoint
          TOKEN_URL: !Ref TokenUrl
          USER_POOL_ID: !Ref UserPoolId
          CLIENT_ID: !Ref UserPoolClientId
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:DescribeUserPoolClient
              Resource: !Sub arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:PutParameter
              Resource: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*

  SfnFlowsFunction:

    # checkov:skip=CKV_AWS_115
    # checkov:skip=CKV_AWS_116
    # checkov:skip=CKV_AWS_117
    # checkov:skip=CKV_AWS_173
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: VPC not required
          - id: W92
            reason: ReservedConcurrentExecutions not required
    Properties:
      CodeUri: functions/sfn-flows
      Layers:
        - !Ref MediaInfoLayer
        - !Ref OpenIdAuthLayerArn
      Environment:
        Variables:
          TAMS_ENDPOINT: !Ref ApiEndpoint
          TOKEN_URL: !Ref TokenUrl
          USER_POOL_ID: !Ref UserPoolId
          CLIENT_ID: !Ref UserPoolClientId
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:DescribeUserPoolClient
              Resource: !Sub arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}

Outputs:
  SfnFlowsFunctionArn:
    Value: !GetAtt SfnFlowsFunction.Arn

  SfnFlowsFunctionRole:
    Value: !Ref SfnFlowsFunctionRole

  S3IngestionFunctionArn:
    Value: !GetAtt S3IngestionFunction.Arn

  S3IngestionFunctionRole:
    Value: !Ref S3IngestionFunctionRole
