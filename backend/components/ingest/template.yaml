AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  UserPoolId:
    Type: String

  ApiEndpoint:
    Type: String

  UserPoolClientId:
    Type: String

  TokenUrl:
    Type: String

  AuthRoleName:
    Type: String

  OpenIdAuthLayerArn:
    Type: String

  TamsConnectionArn:
    Type: String

  ParentStackName:
    Type: String

Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Tracing: Active
    Timeout: 300
    MemorySize: 128
    Handler: app.lambda_handler
    Runtime: python3.13
    Architectures:
      - arm64

Resources:
  AuthRolePolicyIngest:
    Type: AWS::IAM::RolePolicy
    Properties:
      RoleName: !Ref AuthRoleName
      PolicyName: !Ref AWS::StackName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - states:StartSyncExecution
            Resource:
              - !Ref CreateNewFlow

  SqsSegmentIngestionFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: VPC not required
          - id: W92
            reason: ReservedConcurrentExecutions not required
    Properties:
      CodeUri: functions/sqs-segment-ingestion
      RecursiveLoop: Allow
      Layers:
        - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-python313-arm64:7
        - !Ref OpenIdAuthLayerArn
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: tams-tools
          POWERTOOLS_METRICS_NAMESPACE: TAMS-Tools
          TAMS_ENDPOINT: !Ref ApiEndpoint
          TOKEN_URL: !Ref TokenUrl
          USER_POOL_ID: !Ref UserPoolId
          CLIENT_ID: !Ref UserPoolClientId
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:DescribeUserPoolClient
              Resource: !Sub arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}
            - Effect: Allow
              Action:
                - s3:ListBucket
                - s3:GetObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::*
              Condition:
                StringEquals:
                  s3:ResourceAccount: !Ref AWS::AccountId
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SegmentIngestQueue.Arn
            Enabled: True
            FunctionResponseTypes:
              - ReportBatchItemFailures

  SegmentIngestQueue:
    Type: AWS::SQS::Queue
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W48
            reason: Encryption not required
    Properties:
      VisibilityTimeout: 300
      MessageRetentionPeriod: 86400
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SegmentIngestDLQ.Arn
        maxReceiveCount: 1

  SegmentIngestDLQ:
    Type: AWS::SQS::Queue
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W48
            reason: Encryption not required
    Properties:
      VisibilityTimeout: 300
      MessageRetentionPeriod: 86400

  CreateNewFlowLogGroup:
    Type: AWS::Logs::LogGroup
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W84
            reason: Encryption no required.
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${ParentStackName}-create-new-flow
      RetentionInDays: 30

  CreateNewFlow:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Tracing:
        Enabled: True
      Logging:
        Level: ALL
        IncludeExecutionData: True
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt CreateNewFlowLogGroup.Arn
      DefinitionUri: statemachines/createNewFlow.yaml
      DefinitionSubstitutions:
        ConnectionArn: !Ref TamsConnectionArn
        TamsEndpoint: !Ref ApiEndpoint
        ApplyChangesFunctionArn: !GetAtt ApplyChangesFunction.Arn
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogDelivery
                - logs:PutResourcePolicy
                - logs:DescribeLogGroups
                - logs:UpdateLogDelivery
                - logs:DeleteLogDelivery
                - logs:DescribeResourcePolicies
                - logs:GetLogDelivery
                - logs:ListLogDeliveries
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CreateNewFlowLogGroup}:log-stream:*
            - Effect: Allow
              Action:
                - logs:PutDestination
                - logs:PutDestinationPolicy
              Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CreateNewFlowLogGroup}:destination:*
            - Effect: Allow
              Action:
                - logs:PutSubscriptionFilter
              Resource:
                - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CreateNewFlowLogGroup}
                - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CreateNewFlowLogGroup}:destination:*
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - events:RetrieveConnectionCredentials
              Resource:
                - !Ref TamsConnectionArn
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - secretsmanager:DescribeSecret
              Resource:
                - !Sub
                  - arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:events!connection/${TamsConnection}/*
                  - TamsConnection: !Select [1, !Split [/, !Ref TamsConnectionArn]]
            - Effect: Allow
              Action:
                - states:InvokeHTTPEndpoint
              Resource:
                - !Sub arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:*
              Condition:
                StringEquals:
                  states:HTTPMethod:
                    - GET
                    - PUT
                StringLike:
                  states:HTTPEndpoint:
                    - !Sub ${ApiEndpoint}/flows/*
                    - !Sub ${ApiEndpoint}/flows/*/flow_collection
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: !GetAtt ApplyChangesFunction.Arn

  ApplyChangesFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: VPC not required
          - id: W92
            reason: ReservedConcurrentExecutions not required
    Properties:
      CodeUri: functions/apply-changes

Outputs:
  SqsSegmentIngestFunctionArn:
    Value: !GetAtt SqsSegmentIngestionFunction.Arn

  SqsSegmentIngestionFunctionRoleName:
    Value: !Ref SqsSegmentIngestionFunctionRole

  SegmentIngestQueueUrl:
    Value: !Ref SegmentIngestQueue

  SegmentIngestQueueArn:
    Value: !GetAtt SegmentIngestQueue.Arn

  CreateNewFlowArn:
    Value: !Ref CreateNewFlow
