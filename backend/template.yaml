AWSTemplateFormatVersion: "2010-09-09"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Components
        Parameters:
          - DeployHlsApi
          - DeployIngestHls
      - Label:
          default: Configuration
        Parameters:
          - ApiStackName
    ParameterLabels:
      ApiStackName:
        default: The name of the CloudFormation stack that Deployed the TAMS API
      DeployHlsApi:
        default: Deploy HLS Endpoint?
      DeployIngestHls:
        default: Deploy HLS ingest?

Parameters:
  ApiStackName:
    Type: String

  DeployHlsApi:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"

  DeployIngestHls:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"

Conditions:
  DeployHlsApi: !Equals [!Ref DeployHlsApi, "Yes"]

  DeployIngestHls: !Equals [!Ref DeployIngestHls, "Yes"]

  DeployHls: !Or [!Condition DeployHlsApi, !Condition DeployIngestHls]

Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Tracing: Active
    Timeout: 30
    MemorySize: 128
    Handler: app.lambda_handler
    Runtime: python3.13
    Architectures:
      - arm64

  Api:
    EndpointConfiguration:
      Type: REGIONAL
    Auth:
      DefaultAuthorizer: AWS_IAM
      AddDefaultAuthorizerToCorsPreflight: False
    TracingEnabled: true
    MethodSettings:
      - ResourcePath: /*
        HttpMethod: '*'
        DataTraceEnabled: True
        LoggingLevel: INFO

Resources:
  OpenIdAuthLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: python3.13
      BuildArchitecture: arm64
    Properties:
      RetentionPolicy: Delete
      ContentUri: layers/openid-auth
      CompatibleRuntimes:
        - python3.13
      CompatibleArchitectures:
        - arm64
    Condition: DeployHls

  CustomResourceFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: VPC not required
          - id: W92
            reason: ReservedConcurrentExecutions not required
    Properties:
      Timeout: 30
      MemorySize: 128
      Handler: app.lambda_handler
      Runtime: python3.13
      CodeUri: functions/custom_resource/
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:DescribeUserPoolClient
              Resource:
                - !Sub
                  - arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}
                  - UserPoolId: !ImportValue
                      Fn::Sub: ${ApiStackName}-UserPoolId

  GetClientSecret:
    Type: Custom::ClientSecret
    Properties:
      ServiceToken: !GetAtt CustomResourceFunction.Arn
      ServiceTimeout: 30
      UserPoolId: !ImportValue
        Fn::Sub: ${ApiStackName}-UserPoolId
      ClientId: !ImportValue
        Fn::Sub: ${ApiStackName}-UserPoolClientId

  CodecsParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${AWS::StackName}-codecs
      Type: String
      DataType: text
      Description: Codec mappings for HLS
      Value: |
        [
          {
            "tams": "audio/aac",
            "hls": "mp4a"
          },
          {
            "tams": "video/h264",
            "hls": "avc1"
          }
        ]
    Condition: DeployHls

  TamsConnection:
    Type: AWS::Events::Connection
    Properties:
      AuthorizationType: OAUTH_CLIENT_CREDENTIALS
      AuthParameters:
        OAuthParameters:
          AuthorizationEndpoint: !ImportValue
            Fn::Sub: ${ApiStackName}-TokenUrl
          ClientParameters:
            ClientID: !ImportValue
              Fn::Sub: ${ApiStackName}-UserPoolClientId
            ClientSecret: !GetAtt GetClientSecret.ClientSecret
          HttpMethod: POST
          OAuthHttpParameters:
            BodyParameters:
              - Key: scope
                Value: tams-api/read tams-api/write tams-api/delete
                IsValueSecret: False
              - Key: grant_type
                Value: client_credentials
                IsValueSecret: False

  HlsApiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: components/hls/template.yaml
      Parameters:
        UserPoolId: !ImportValue
          Fn::Sub: ${ApiStackName}-UserPoolId
        ApiEndpoint: !ImportValue
          Fn::Sub: ${ApiStackName}-ApiEndpoint
        UserPoolClientId: !ImportValue
          Fn::Sub: ${ApiStackName}-UserPoolClientId
        TokenUrl: !ImportValue
          Fn::Sub: ${ApiStackName}-TokenUrl
        AuthRoleName: !ImportValue
          Fn::Sub: ${ApiStackName}-AuthRoleName
        OpenIdAuthLayerArn: !Ref OpenIdAuthLayer
        CodecsParameterName: !Ref CodecsParameter
    Condition: DeployHlsApi

  IngestHlsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: components/ingest-hls/template.yaml
      Parameters:
        UserPoolId: !ImportValue
          Fn::Sub: ${ApiStackName}-UserPoolId
        ApiEndpoint: !ImportValue
          Fn::Sub: ${ApiStackName}-ApiEndpoint
        UserPoolClientId: !ImportValue
          Fn::Sub: ${ApiStackName}-UserPoolClientId
        TokenUrl: !ImportValue
          Fn::Sub: ${ApiStackName}-TokenUrl
        AuthRoleName: !ImportValue
          Fn::Sub: ${ApiStackName}-AuthRoleName
        OpenIdAuthLayerArn: !Ref OpenIdAuthLayer
        CodecsParameterName: !Ref CodecsParameter
        TamsConnectionArn: !GetAtt TamsConnection.Arn
    Condition: DeployIngestHls

Outputs:
  HlsApiEndpoint:
    Value: !If
      - DeployHlsApi
      - !GetAtt HlsApiStack.Outputs.ApiEndpoint
      - ""

  HlsIngestEndpoint:
    Value: !If
      - DeployIngestHls
      - !GetAtt IngestHlsStack.Outputs.ApiEndpoint
      - ""

  HlsIngestArn:
    Value: !If
      - DeployIngestHls
      - !GetAtt IngestHlsStack.Outputs.IngestHlsArn
      - ""
